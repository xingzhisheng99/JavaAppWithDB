/*
 *
 * Secondary frame for insertion
 * Currently supporting the insertion of new episodes to a existing show
 * One entry per insertion execution
 * Future possibilities:
 * 1. bulk insertion
 * 2. inserting a new show
 * 3. protecting the database from user injection
 *
 */

/**
 *
 * @author Yishuo
 */
package javaappwithdb;

import com.sun.xml.internal.ws.streaming.XMLStreamReaderUtil;
import java.awt.Toolkit;
import java.awt.event.WindowEvent;
import javax.swing.*;
import java.sql.*;
import net.proteanit.sql.DbUtils;

public class InsertionViewer extends javax.swing.JFrame {

    /**
     * Creates new form InsertionViewer
     */
    public InsertionViewer() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        text_url = new javax.swing.JTextField();
        text_ep_id = new javax.swing.JTextField();
        text_show_name = new javax.swing.JTextField();
        text_ep_name = new javax.swing.JTextField();
        text_runtime = new javax.swing.JTextField();
        text_number = new javax.swing.JTextField();
        text_season = new javax.swing.JTextField();
        text_summary = new javax.swing.JTextField();
        text_image = new javax.swing.JTextField();
        jButton_submit = new javax.swing.JButton();
        jLabel10 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Insert An Entry");

        jLabel1.setText("Episode ID");

        jLabel2.setText("URL");

        jLabel3.setText("Episode name");

        jLabel4.setText("Show name");

        jLabel5.setText("Season");

        jLabel6.setText("Number");

        jLabel7.setText("Runtime");

        jLabel8.setText("Image URL");

        jLabel9.setText("Summary");

        text_ep_id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_ep_idActionPerformed(evt);
            }
        });

        text_runtime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_runtimeActionPerformed(evt);
            }
        });

        text_number.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_numberActionPerformed(evt);
            }
        });

        text_summary.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_summaryActionPerformed(evt);
            }
        });

        jButton_submit.setText("Submit");
        jButton_submit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_submitActionPerformed(evt);
            }
        });

        jLabel10.setText("*Please note that the show name and episode ID can not be empty.");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(text_ep_id, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel9)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(text_summary, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(text_image, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(text_runtime, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(text_number, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(text_season, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(text_show_name, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(text_ep_name, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(text_url, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel10))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(163, 163, 163)
                                .addComponent(jButton_submit)))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(text_ep_id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(text_url, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(text_ep_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(text_show_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(text_season, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(text_number, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(text_runtime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(text_image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(text_summary, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
                .addComponent(jLabel10)
                .addGap(18, 18, 18)
                .addComponent(jButton_submit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    ////////////////////////////////////////////////////////////////////////////
    //////////////////////// Checking for different actions ////////////////////
    ////////////////////////////////////////////////////////////////////////////
    private void text_ep_idActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_ep_idActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_ep_idActionPerformed

    private void text_numberActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_numberActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_numberActionPerformed

    private void text_runtimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_runtimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_runtimeActionPerformed

    private void text_summaryActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_summaryActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_summaryActionPerformed
    
    
    // check conditions when the button is clicked
    private void jButton_submitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_submitActionPerformed
        // TODO add your handling code here:
        // take all values and perform insertion
        // if - show_name doesn't exsit in the shows table, set show_name = "" and prompt again
        // else - start transaction and close the window
        // 
        String tmp_ep_id = text_ep_id.getText();
        String tmp_url = text_url.getText();
        String tmp_ep_name = text_ep_name.getText();
        String tmp_show_name = text_show_name.getText();
        String tmp_season = text_season.getText();
        String tmp_number = text_number.getText();
        String tmp_runtime = text_runtime.getText();
        String tmp_image = text_image.getText();
        String tmp_summary = text_summary.getText();
        int tmp_show_id = 0;
        
        // primary keys cannot be empty
        if (tmp_ep_id.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Episode ID cannot be empty!");
            
        } else if (tmp_show_name.isEmpty()) {
            JOptionPane.showMessageDialog(null, "Show name cannot be empty!");
            
        } else {
            //fetch show id for data insertion
            
            String sql1 = "SELECT id, name FROM Shows";

            try (Connection conn = sqlConnection.connect();
                    Statement stmt = conn.createStatement();
                    ResultSet rs = stmt.executeQuery(sql1)) {

                while (rs.next()) {
                    String col_name = rs.getString("name");
                    if (tmp_show_name.equalsIgnoreCase(col_name)) {
                        tmp_show_id = rs.getInt("id");
                    }
                }
                System.out.println(tmp_show_id);

            } catch (SQLException e) {
                JOptionPane.showMessageDialog(null, e);
                tmp_show_id = -1;

            }
            
            // check if the show name of input is correct
            if (tmp_show_id <= 0) {
                JOptionPane.showMessageDialog(null, 
                        "Show name " + tmp_show_name + " not found.");
                
            } else {
                String sql2 = "INSERT INTO Episodes (id, url, name, "
                        + "season, number, runtime, image, summary, show_id) "
                        + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                try (Connection conn = sqlConnection.connect();
                        PreparedStatement pstmt = conn.prepareStatement(sql2)) {

                    // set the value
                    pstmt.setString(1, tmp_ep_id);
                    pstmt.setString(2, tmp_url);
                    pstmt.setString(3, tmp_ep_name);
                    pstmt.setString(4, tmp_season);
                    pstmt.setString(5, tmp_number);
                    pstmt.setString(6, tmp_runtime);
                    pstmt.setString(7, tmp_image);
                    pstmt.setString(8, tmp_summary);
                    pstmt.setString(9, "" + tmp_show_id);
                    //
                    pstmt.execute();
                    
                    JOptionPane.showMessageDialog(null, "Transaction completed!");
                    close();
                    
                } catch (SQLException e) {
                    JOptionPane.showMessageDialog(null, "This is a duplicate Entry!"
                            + " \nPlease check your input and resubmit.");
                    
                }
            }
        }
    }//GEN-LAST:event_jButton_submitActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(InsertionViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(InsertionViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(InsertionViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(InsertionViewer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new InsertionViewer().setVisible(true);
            }
        });
    }
    
    
    public void close(){
        WindowEvent winClosingEvent = new WindowEvent(this, WindowEvent.WINDOW_CLOSING);
        Toolkit.getDefaultToolkit().getSystemEventQueue().postEvent(winClosingEvent);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_submit;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField text_ep_id;
    private javax.swing.JTextField text_ep_name;
    private javax.swing.JTextField text_image;
    private javax.swing.JTextField text_number;
    private javax.swing.JTextField text_runtime;
    private javax.swing.JTextField text_season;
    private javax.swing.JTextField text_show_name;
    private javax.swing.JTextField text_summary;
    private javax.swing.JTextField text_url;
    // End of variables declaration//GEN-END:variables
}
